{"remainingRequest":"D:\\LabPaperShare\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\LabPaperShare\\vue\\src\\utils\\request.js","dependencies":[{"path":"D:\\LabPaperShare\\vue\\src\\utils\\request.js","mtime":1655208382909},{"path":"D:\\LabPaperShare\\vue\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1654680823487},{"path":"D:\\LabPaperShare\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1654419525262}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF90aGlzID0gdGhpczsKCmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCByb3V0ZXIgZnJvbSAiQC9yb3V0ZXIiOwppbXBvcnQgY29uZmlnIGZyb20gIi4uL2NvbmZpZyI7CnZhciBiYXNlVXJsID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcgPyBjb25maWcuYmFzZVVybC5kZXYgOiBjb25maWcuYmFzZVVybC5wcm87CnZhciByZXF1ZXN0ID0gYXhpb3MuY3JlYXRlKHsKICAvL2Jhc2VVUkw6ICIvYXBpIiwKICB0aW1lb3V0OiAzMDAwMAp9KTsgLy8g6K+35rGC55m95ZCN5Y2V77yM5aaC5p6c6K+35rGC5Zyo55m95ZCN5Y2V6YeM6Z2i77yM5bCG5LiN5Lya6KKr5oum5oiq5qCh6aqM5p2D6ZmQCgp2YXIgd2hpdGVVcmxzID0gWyIvYXBpL2xvZ2luIiwgJy9hcGkvcmVnaXN0ZXInLCAnL2FwaS9yZWdpc3Rlci9zZW5kZW1haWwnXTsgLy8gcmVxdWVzdCDmi6bmiKrlmagKLy8g5Y+v5Lul6Ieq6K+35rGC5Y+R6YCB5YmN5a+56K+35rGC5YGa5LiA5Lqb5aSE55CGCi8vIOavlOWmgue7n+S4gOWKoHRva2Vu77yM5a+56K+35rGC5Y+C5pWw57uf5LiA5Yqg5a+GCgpyZXF1ZXN0LmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShmdW5jdGlvbiAoY29uZmlnKSB7CiAgY29uc29sZS5sb2coIuaLpuaIquWZqDEiKTsgLy8g5Y+W5Ye6c2Vzc2lvblN0b3JhZ2Xph4zpnaLnvJPlrZjnmoTnlKjmiLfkv6Hmga8KCiAgdmFyIHVzZXJKc29uID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgidXNlciIpOwoKICBpZiAoIXdoaXRlVXJscy5pbmNsdWRlcyhjb25maWcudXJsKSkgewogICAgaWYgKCF1c2VySnNvbikgewogICAgICBjb25zb2xlLmxvZygidGlhb3podWFubGEiKTsKICAgICAgcm91dGVyLnB1c2goIi9sb2dpbiIpOwogICAgfQogIH0KCiAgcmV0dXJuIGNvbmZpZzsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgY29uc29sZS5lcnJvcigi5oum5oiq5ZmoYmVmb3JlIHJlcXVlc3QiKTsKICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwp9KTsgLy8gcmVzcG9uc2Ug5oum5oiq5ZmoCi8vIOWPr+S7peWcqOaOpeWPo+WTjeW6lOWQjue7n+S4gOWkhOeQhue7k+aenAoKcmVxdWVzdC5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKGZ1bmN0aW9uIChyZXNwb25zZSkgewogIHZhciByZXMgPSByZXNwb25zZS5kYXRhOyAvLyDlpoLmnpzmmK/ov5Tlm57nmoTmlofku7YKCiAgaWYgKHJlc3BvbnNlLmNvbmZpZy5yZXNwb25zZVR5cGUgPT09ICdibG9iJykgewogICAgY29uc29sZS5lcnJvcigiYmxvYiIpOwogICAgcmV0dXJuIHJlczsKICB9IC8vIOWFvOWuueacjeWKoeerr+i/lOWbnueahOWtl+espuS4suaVsOaNrgoKCiAgaWYgKHR5cGVvZiByZXMgPT09ICdzdHJpbmcnKSB7CiAgICBjb25zb2xlLmVycm9yKCLmi6bmiKrlmahzdHJpbmciKTsKICAgIHJlcyA9IHJlcyA/IEpTT04ucGFyc2UocmVzKSA6IHJlczsKICB9CgogIGlmIChyZXMuY29kZSA9PT0gMykgewogICAgX3RoaXMuJG1lc3NhZ2UuZXJyb3IoInRva2Vu6L+H5pyf77yM6YeN5paw55m75b2VIik7CgogICAgc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbSgidXNlciIpOwogICAgc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbSgidXNlclBlcm1pc3Npb24iKTsKICAgIGNvbnNvbGUuZXJyb3IoInRva2Vu6L+H5pyf77yM6YeN5paw55m75b2VIik7CiAgICByb3V0ZXIucHVzaCgiL2xvZ2luIik7CiAgfQoKICByZXR1cm4gcmVzOwp9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICBjb25zb2xlLmxvZygnZXJyISEnICsgZXJyb3IpOyAvLyBmb3IgZGVidWcKCiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKfSk7CmV4cG9ydCBkZWZhdWx0IHJlcXVlc3Q7"},{"version":3,"sources":["D:/LabPaperShare/vue/src/utils/request.js"],"names":["axios","router","config","baseUrl","process","env","NODE_ENV","dev","pro","request","create","timeout","whiteUrls","interceptors","use","console","log","userJson","sessionStorage","getItem","includes","url","push","error","Promise","reject","response","res","data","responseType","JSON","parse","code","$message","removeItem"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,IAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyCJ,MAAM,CAACC,OAAP,CAAeI,GAAxD,GAA8DL,MAAM,CAACC,OAAP,CAAeK,GAA7F;AACA,IAAMC,OAAO,GAAGT,KAAK,CAACU,MAAN,CAAa;AACzB;AACAC,EAAAA,OAAO,EAAE;AAFgB,CAAb,CAAhB,C,CAKA;;AACA,IAAMC,SAAS,GAAG,CAAC,YAAD,EAAe,eAAf,EAA+B,yBAA/B,CAAlB,C,CACA;AACA;AACA;;AACAH,OAAO,CAACI,YAAR,CAAqBJ,OAArB,CAA6BK,GAA7B,CAAiC,UAAAZ,MAAM,EAAI;AACvCa,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EADuC,CAEvC;;AACA,MAAIC,QAAQ,GAAGC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAf;;AACA,MAAI,CAACP,SAAS,CAACQ,QAAV,CAAmBlB,MAAM,CAACmB,GAA1B,CAAL,EAAqC;AACjC,QAAI,CAACJ,QAAL,EAAe;AACXF,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAf,MAAAA,MAAM,CAACqB,IAAP,CAAY,QAAZ;AACH;AACJ;;AACD,SAAOpB,MAAP;AACH,CAXD,EAWG,UAAAqB,KAAK,EAAI;AACRR,EAAAA,OAAO,CAACQ,KAAR,CAAc,mBAAd;AAEA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAfD,E,CAgBA;AACA;;AACAd,OAAO,CAACI,YAAR,CAAqBa,QAArB,CAA8BZ,GAA9B,CACI,UAAAY,QAAQ,EAAI;AACR,MAAIC,GAAG,GAAGD,QAAQ,CAACE,IAAnB,CADQ,CAER;;AACA,MAAIF,QAAQ,CAACxB,MAAT,CAAgB2B,YAAhB,KAAiC,MAArC,EAA6C;AACzCd,IAAAA,OAAO,CAACQ,KAAR,CAAc,MAAd;AAEA,WAAOI,GAAP;AACH,GAPO,CAQR;;;AACA,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AACzBZ,IAAAA,OAAO,CAACQ,KAAR,CAAc,WAAd;AAEAI,IAAAA,GAAG,GAAGA,GAAG,GAAGG,IAAI,CAACC,KAAL,CAAWJ,GAAX,CAAH,GAAqBA,GAA9B;AACH;;AACD,MAAIA,GAAG,CAACK,IAAJ,KAAa,CAAjB,EAAoB;AAChB,IAAA,KAAI,CAACC,QAAL,CAAcV,KAAd,CAAoB,cAApB;;AACAL,IAAAA,cAAc,CAACgB,UAAf,CAA0B,MAA1B;AACAhB,IAAAA,cAAc,CAACgB,UAAf,CAA0B,gBAA1B;AACAnB,IAAAA,OAAO,CAACQ,KAAR,CAAc,cAAd;AACAtB,IAAAA,MAAM,CAACqB,IAAP,CAAY,QAAZ;AACH;;AACD,SAAOK,GAAP;AACH,CAvBL,EAwBI,UAAAJ,KAAK,EAAI;AACLR,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAUO,KAAtB,EADK,CACwB;;AAC7B,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CA3BL;AA6BA,eAAed,OAAf","sourcesContent":["import axios from 'axios'\r\nimport router from \"@/router\";\r\nimport config from \"../config\"\r\n\r\nconst baseUrl = process.env.NODE_ENV === 'development' ? config.baseUrl.dev : config.baseUrl.pro\r\nconst request = axios.create({\r\n    //baseURL: \"/api\",\r\n    timeout: 30000\r\n})\r\n\r\n// 请求白名单，如果请求在白名单里面，将不会被拦截校验权限\r\nconst whiteUrls = [\"/api/login\", '/api/register','/api/register/sendemail']\r\n// request 拦截器\r\n// 可以自请求发送前对请求做一些处理\r\n// 比如统一加token，对请求参数统一加密\r\nrequest.interceptors.request.use(config => {\r\n    console.log(\"拦截器1\")\r\n    // 取出sessionStorage里面缓存的用户信息\r\n    let userJson = sessionStorage.getItem(\"user\")\r\n    if (!whiteUrls.includes(config.url)) {\r\n        if (!userJson) {\r\n            console.log(\"tiaozhuanla\")\r\n            router.push(\"/login\")\r\n        }\r\n    }\r\n    return config\r\n}, error => {\r\n    console.error(\"拦截器before request\")\r\n\r\n    return Promise.reject(error)\r\n});\r\n// response 拦截器\r\n// 可以在接口响应后统一处理结果\r\nrequest.interceptors.response.use(\r\n    response => {\r\n        let res = response.data;\r\n        // 如果是返回的文件\r\n        if (response.config.responseType === 'blob') {\r\n            console.error(\"blob\")\r\n\r\n            return res\r\n        }\r\n        // 兼容服务端返回的字符串数据\r\n        if (typeof res === 'string') {\r\n            console.error(\"拦截器string\")\r\n\r\n            res = res ? JSON.parse(res) : res\r\n        }\r\n        if (res.code === 3) {\r\n            this.$message.error(\"token过期，重新登录\")\r\n            sessionStorage.removeItem(\"user\")\r\n            sessionStorage.removeItem(\"userPermission\")\r\n            console.error(\"token过期，重新登录\")\r\n            router.push(\"/login\")\r\n        }\r\n        return res;\r\n    },\r\n    error => {\r\n        console.log('err!!' + error) // for debug\r\n        return Promise.reject(error)\r\n    }\r\n)\r\nexport default request\r\n\r\n"]}]}