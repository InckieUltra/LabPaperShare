{"remainingRequest":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/babel-loader/lib/index.js!/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/liujiaming/Documents/LabPaperShare-main/vue/src/views/Category.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/src/views/Category.vue","mtime":1652009860481},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js","mtime":1651659848347},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/babel-loader/lib/index.js","mtime":1651659848904},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1651659848347},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/vue-loader-v16/dist/index.js","mtime":1651659849069}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHJlcXVlc3QgZnJvbSAiQC91dGlscy9yZXF1ZXN0IjsKZXhwb3J0IGRlZmF1bHQgewogIC8vIGNyZWF0ZWQoKSB7CiAgLy8gICBsZXQgdXNlclN0ciA9IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oInVzZXIiKSB8fCAie30iCiAgLy8gICB0aGlzLnVzZXIgPSBKU09OLnBhcnNlKHVzZXJTdHIpCiAgLy8gICAvLyDor7fmsYLmnI3liqHnq6/vvIznoa7orqTlvZPliY3nmbvlvZXnlKjmiLfnmoQg5ZCI5rOV5L+h5oGvCiAgLy8gICByZXF1ZXN0LmdldCgiL3VzZXIvIiArIHRoaXMudXNlci5pZCkudGhlbihyZXMgPT4gewogIC8vICAgICBpZiAocmVzLmNvZGUgPT09IDApIHsKICAvLyAgICAgICB0aGlzLnVzZXIgPSByZXMuZGF0YQogIC8vICAgICB9CiAgLy8gICB9KQogIC8vCiAgLy8gICB0aGlzLmxvYWQoKQogIC8vIH0sCiAgbWV0aG9kczogewogICAgc2hvd0NoYXJ0OiBmdW5jdGlvbiBzaG93Q2hhcnQoKSB7CiAgICAgIC8vIOWfuuS6juWHhuWkh+WlveeahGRvbe+8jOWIneWni+WMlmVjaGFydHPlrp7kvosKICAgICAgdmFyIG15Q2hhcnQgPSB0aGlzLiRyb290LmVjaGFydHMuaW5pdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndHJlZUNoYXJ0JykpOyAvLyDmjIflrprlm77ooajnmoTphY3nva7pobnlkozmlbDmja4KCiAgICAgIHZhciBvcHRpb24gPSB7CiAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgdHJpZ2dlcjogJ2l0ZW0nLAogICAgICAgICAgdHJpZ2dlck9uOiAnbW91c2Vtb3ZlJwogICAgICAgIH0sCiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICBmb250U2l6ZTogNDAKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHNlcmllczogW3sKICAgICAgICAgIHR5cGU6ICd0cmVlJywKICAgICAgICAgIGlkOiAwLAogICAgICAgICAgbmFtZTogJ3RyZWUxJywKICAgICAgICAgIGRhdGE6IFt0aGlzLnRyZWVkYXRhXSwKICAgICAgICAgIHRvcDogJzEwJScsCiAgICAgICAgICBsZWZ0OiAnOCUnLAogICAgICAgICAgYm90dG9tOiAnMjIlJywKICAgICAgICAgIHJpZ2h0OiAnMjAlJywKICAgICAgICAgIHN5bWJvbFNpemU6IDcsCiAgICAgICAgICBlZGdlU2hhcGU6ICdwb2x5bGluZScsCiAgICAgICAgICBlZGdlRm9ya1Bvc2l0aW9uOiAnNjMlJywKICAgICAgICAgIGluaXRpYWxUcmVlRGVwdGg6IDMsCiAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgd2lkdGg6IDIKICAgICAgICAgIH0sCiAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjZmZmJywKICAgICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgICAgZm9udFNpemU6IDE2LAogICAgICAgICAgICAgIGNvbG9yOiAnIzU0NWM2NCcKICAgICAgICAgICAgfSwKICAgICAgICAgICAgcG9zaXRpb246ICdsZWZ0JywKICAgICAgICAgICAgdmVydGljYWxBbGlnbjogJ21pZGRsZScsCiAgICAgICAgICAgIGFsaWduOiAncmlnaHQnCiAgICAgICAgICB9LAogICAgICAgICAgbGVhdmVzOiB7CiAgICAgICAgICAgIGxhYmVsOiB7CiAgICAgICAgICAgICAgcG9zaXRpb246ICdyaWdodCcsCiAgICAgICAgICAgICAgdmVydGljYWxBbGlnbjogJ21pZGRsZScsCiAgICAgICAgICAgICAgYWxpZ246ICdsZWZ0JwogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgZW1waGFzaXM6IHsKICAgICAgICAgICAgZm9jdXM6ICdkZXNjZW5kYW50JwogICAgICAgICAgfSwKICAgICAgICAgIGV4cGFuZEFuZENvbGxhcHNlOiB0cnVlLAogICAgICAgICAgYW5pbWF0aW9uRHVyYXRpb246IDU1MCwKICAgICAgICAgIGFuaW1hdGlvbkR1cmF0aW9uVXBkYXRlOiA3NTAKICAgICAgICB9XQogICAgICB9OyAvLyDkvb/nlKjliJrmjIflrprnmoTphY3nva7pobnlkozmlbDmja7mmL7npLrlm77ooajjgIIKCiAgICAgIG15Q2hhcnQuc2V0T3B0aW9uKG9wdGlvbik7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5zaG93Q2hhcnQoKTsKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0cmVlZGF0YTogewogICAgICAgIC8v5LiA5a6a5LiA5a6a6KaB5rOo5oSP6L+Z6YeM5pyJW10KICAgICAgICBuYW1lOiAnZmxhcmUnLAogICAgICAgIGNoaWxkcmVuOiBbewogICAgICAgICAgbmFtZTogJ2RhdGEnLAogICAgICAgICAgY2hpbGRyZW46IFt7CiAgICAgICAgICAgIG5hbWU6ICdjb252ZXJ0ZXJzJywKICAgICAgICAgICAgY2hpbGRyZW46IFt7CiAgICAgICAgICAgICAgbmFtZTogJ0NvbnZlcnRlcnMnLAogICAgICAgICAgICAgIHZhbHVlOiA3MjEKICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgIG5hbWU6ICdEZWxpbWl0ZWRUZXh0Q29udmVydGVyJywKICAgICAgICAgICAgICB2YWx1ZTogNDI5NAogICAgICAgICAgICB9XQogICAgICAgICAgfSwgewogICAgICAgICAgICBuYW1lOiAnRGF0YVV0aWwnLAogICAgICAgICAgICB2YWx1ZTogMzMyMgogICAgICAgICAgfV0KICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAnZGlzcGxheScsCiAgICAgICAgICBjaGlsZHJlbjogW3sKICAgICAgICAgICAgbmFtZTogJ0RpcnR5U3ByaXRlJywKICAgICAgICAgICAgdmFsdWU6IDg4MzMKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbmFtZTogJ0xpbmVTcHJpdGUnLAogICAgICAgICAgICB2YWx1ZTogMTczMgogICAgICAgICAgfSwgewogICAgICAgICAgICBuYW1lOiAnUmVjdFNwcml0ZScsCiAgICAgICAgICAgIHZhbHVlOiAzNjIzCiAgICAgICAgICB9XQogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICdmbGV4JywKICAgICAgICAgIGNoaWxkcmVuOiBbewogICAgICAgICAgICBuYW1lOiAnRmxhcmVWaXMnLAogICAgICAgICAgICB2YWx1ZTogNDExNgogICAgICAgICAgfV0KICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAncXVlcnknLAogICAgICAgICAgY2hpbGRyZW46IFt7CiAgICAgICAgICAgIG5hbWU6ICdBZ2dyZWdhdGVFeHByZXNzaW9uJywKICAgICAgICAgICAgdmFsdWU6IDE2MTYKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbmFtZTogJ0FuZCcsCiAgICAgICAgICAgIHZhbHVlOiAxMDI3CiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIG5hbWU6ICdBcml0aG1ldGljJywKICAgICAgICAgICAgdmFsdWU6IDM4OTEKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbmFtZTogJ0F2ZXJhZ2UnLAogICAgICAgICAgICB2YWx1ZTogODkxCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIG5hbWU6ICdCaW5hcnlFeHByZXNzaW9uJywKICAgICAgICAgICAgdmFsdWU6IDI4OTMKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbmFtZTogJ0NvbXBhcmlzb24nLAogICAgICAgICAgICB2YWx1ZTogNTEwMwogICAgICAgICAgfSwgewogICAgICAgICAgICBuYW1lOiAnQ29tcG9zaXRlRXhwcmVzc2lvbicsCiAgICAgICAgICAgIHZhbHVlOiAzNjc3CiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIG5hbWU6ICdDb3VudCcsCiAgICAgICAgICAgIHZhbHVlOiA3ODEKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbmFtZTogJ0RhdGVVdGlsJywKICAgICAgICAgICAgdmFsdWU6IDQxNDEKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbmFtZTogJ0Rpc3RpbmN0JywKICAgICAgICAgICAgdmFsdWU6IDkzMwogICAgICAgICAgfSwgewogICAgICAgICAgICBuYW1lOiAnbWV0aG9kcycsCiAgICAgICAgICAgIGNoaWxkcmVuOiBbewogICAgICAgICAgICAgIG5hbWU6ICdhZGQnLAogICAgICAgICAgICAgIHZhbHVlOiA1OTMKICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgIG5hbWU6ICdhbmQnLAogICAgICAgICAgICAgIHZhbHVlOiAzMzAKICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgIG5hbWU6ICdhdmVyYWdlJywKICAgICAgICAgICAgICB2YWx1ZTogMjg3CiAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICBuYW1lOiAnY291bnQnLAogICAgICAgICAgICAgIHZhbHVlOiAyNzcKICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgIG5hbWU6ICdkaXN0aW5jdCcsCiAgICAgICAgICAgICAgdmFsdWU6IDI5MgogICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgbmFtZTogJ2RpdicsCiAgICAgICAgICAgICAgdmFsdWU6IDU5NQogICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgbmFtZTogJ2VxJywKICAgICAgICAgICAgICB2YWx1ZTogNTk0CiAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICBuYW1lOiAnZm4nLAogICAgICAgICAgICAgIHZhbHVlOiA0NjAKICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgIG5hbWU6ICdndCcsCiAgICAgICAgICAgICAgdmFsdWU6IDYwMwogICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgbmFtZTogJ3hvcicsCiAgICAgICAgICAgICAgdmFsdWU6IDM1NAogICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgbmFtZTogJ3hfeCcsCiAgICAgICAgICAgICAgdmFsdWU6IDI2NAogICAgICAgICAgICB9XQogICAgICAgICAgfSwgewogICAgICAgICAgICBuYW1lOiAnTWluaW11bScsCiAgICAgICAgICAgIHZhbHVlOiA4NDMKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbmFtZTogJ05vdCcsCiAgICAgICAgICAgIHZhbHVlOiAxNTU0CiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIG5hbWU6ICdPcicsCiAgICAgICAgICAgIHZhbHVlOiA5NzAKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbmFtZTogJ1F1ZXJ5JywKICAgICAgICAgICAgdmFsdWU6IDEzODk2CiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIG5hbWU6ICdSYW5nZScsCiAgICAgICAgICAgIHZhbHVlOiAxNTk0CiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIG5hbWU6ICdTdHJpbmdVdGlsJywKICAgICAgICAgICAgdmFsdWU6IDQxMzAKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbmFtZTogJ1N1bScsCiAgICAgICAgICAgIHZhbHVlOiA3OTEKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbmFtZTogJ1ZhcmlhYmxlJywKICAgICAgICAgICAgdmFsdWU6IDExMjQKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbmFtZTogJ1ZhcmlhbmNlJywKICAgICAgICAgICAgdmFsdWU6IDE4NzYKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbmFtZTogJ1hvcicsCiAgICAgICAgICAgIHZhbHVlOiAxMTAxCiAgICAgICAgICB9XQogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICdzY2FsZScsCiAgICAgICAgICBjaGlsZHJlbjogW3sKICAgICAgICAgICAgbmFtZTogJ0lTY2FsZU1hcCcsCiAgICAgICAgICAgIHZhbHVlOiAyMTA1CiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIG5hbWU6ICdMaW5lYXJTY2FsZScsCiAgICAgICAgICAgIHZhbHVlOiAxMzE2CiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIG5hbWU6ICdMb2dTY2FsZScsCiAgICAgICAgICAgIHZhbHVlOiAzMTUxCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIG5hbWU6ICdPcmRpbmFsU2NhbGUnLAogICAgICAgICAgICB2YWx1ZTogMzc3MAogICAgICAgICAgfSwgewogICAgICAgICAgICBuYW1lOiAnUXVhbnRpbGVTY2FsZScsCiAgICAgICAgICAgIHZhbHVlOiAyNDM1CiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIG5hbWU6ICdRdWFudGl0YXRpdmVTY2FsZScsCiAgICAgICAgICAgIHZhbHVlOiA0ODM5CiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIG5hbWU6ICdTY2FsZVR5cGUnLAogICAgICAgICAgICB2YWx1ZTogMTgyMQogICAgICAgICAgfSwgewogICAgICAgICAgICBuYW1lOiAnVGltZVNjYWxlJywKICAgICAgICAgICAgdmFsdWU6IDU4MzMKICAgICAgICAgIH1dCiAgICAgICAgfV0KICAgICAgfQogICAgfTsKICB9Cn07"},{"version":3,"sources":["/Users/liujiaming/Documents/LabPaperShare-main/vue/src/views/Category.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\n\n      <div id=\"treeChart\" :style=\"{width: '750px', height: '900px'}\"></div>\n\n\n</template>\n\n\n<script>\nimport request from \"@/utils/request\";\n\nexport default {\n  // created() {\n  //   let userStr = sessionStorage.getItem(\"user\") || \"{}\"\n  //   this.user = JSON.parse(userStr)\n  //   // 请求服务端，确认当前登录用户的 合法信息\n  //   request.get(\"/user/\" + this.user.id).then(res => {\n  //     if (res.code === 0) {\n  //       this.user = res.data\n  //     }\n  //   })\n  //\n  //   this.load()\n  // },\n  methods: {\n    showChart() {\n      // 基于准备好的dom，初始化echarts实例\n      let myChart = this.$root.echarts.init(document.getElementById('treeChart'))\n\n      // 指定图表的配置项和数据\n      let option = {\n        tooltip: {\n          trigger: 'item',\n          triggerOn: 'mousemove',\n\n        },\n        title:{\n          textStyle:{\n            fontSize: 40\n          },\n        },\n        series: [\n          {\n            type: 'tree',\n            id: 0,\n            name: 'tree1',\n            data: [this.treedata],\n            top: '10%',\n            left: '8%',\n            bottom: '22%',\n            right: '20%',\n            symbolSize: 7,\n            edgeShape: 'polyline',\n            edgeForkPosition: '63%',\n            initialTreeDepth: 3,\n            lineStyle: {\n              width: 2\n            },\n            label: {\n              backgroundColor: '#fff',\n            textStyle:{\n              fontSize: 16,\n              color: '#545c64'\n            },\n              position: 'left',\n              verticalAlign: 'middle',\n              align: 'right'\n            },\n            leaves: {\n              label: {\n                position: 'right',\n                verticalAlign: 'middle',\n                align: 'left',\n              }\n            },\n\n            emphasis: {\n              focus: 'descendant'\n            },\n            expandAndCollapse: true,\n            animationDuration: 550,\n            animationDurationUpdate: 750\n          }\n        ]\n      };\n      // 使用刚指定的配置项和数据显示图表。\n      myChart.setOption(option);\n    }\n  },\n  mounted() {\n    this.showChart();\n  },\n  data() {\n    return {\n      treedata: {//一定一定要注意这里有[]\n        name: 'flare',\n        children: [\n          {\n            name: 'data',\n            children: [\n              {\n                name: 'converters',\n                children: [\n                  { name: 'Converters', value: 721 },\n                  { name: 'DelimitedTextConverter', value: 4294 }\n                ]\n              },\n              {\n                name: 'DataUtil',\n                value: 3322\n              }\n            ]\n          },\n          {\n            name: 'display',\n            children: [\n              { name: 'DirtySprite', value: 8833 },\n              { name: 'LineSprite', value: 1732 },\n              { name: 'RectSprite', value: 3623 }\n            ]\n          },\n          {\n            name: 'flex',\n            children: [{ name: 'FlareVis', value: 4116 }]\n          },\n          {\n            name: 'query',\n            children: [\n              { name: 'AggregateExpression', value: 1616 },\n              { name: 'And', value: 1027 },\n              { name: 'Arithmetic', value: 3891 },\n              { name: 'Average', value: 891 },\n              { name: 'BinaryExpression', value: 2893 },\n              { name: 'Comparison', value: 5103 },\n              { name: 'CompositeExpression', value: 3677 },\n              { name: 'Count', value: 781 },\n              { name: 'DateUtil', value: 4141 },\n              { name: 'Distinct', value: 933 },\n\n              {\n                name: 'methods',\n                children: [\n                  { name: 'add', value: 593 },\n                  { name: 'and', value: 330 },\n                  { name: 'average', value: 287 },\n                  { name: 'count', value: 277 },\n                  { name: 'distinct', value: 292 },\n                  { name: 'div', value: 595 },\n                  { name: 'eq', value: 594 },\n                  { name: 'fn', value: 460 },\n                  { name: 'gt', value: 603 },\n                  { name: 'xor', value: 354 },\n                  { name: 'x_x', value: 264 }\n                ]\n              },\n              { name: 'Minimum', value: 843 },\n              { name: 'Not', value: 1554 },\n              { name: 'Or', value: 970 },\n              { name: 'Query', value: 13896 },\n              { name: 'Range', value: 1594 },\n              { name: 'StringUtil', value: 4130 },\n              { name: 'Sum', value: 791 },\n              { name: 'Variable', value: 1124 },\n              { name: 'Variance', value: 1876 },\n              { name: 'Xor', value: 1101 }\n            ]\n          },\n          {\n            name: 'scale',\n            children: [\n              { name: 'IScaleMap', value: 2105 },\n              { name: 'LinearScale', value: 1316 },\n              { name: 'LogScale', value: 3151 },\n              { name: 'OrdinalScale', value: 3770 },\n              { name: 'QuantileScale', value: 2435 },\n              { name: 'QuantitativeScale', value: 4839 },\n\n              { name: 'ScaleType', value: 1821 },\n              { name: 'TimeScale', value: 5833 }\n            ]\n          }\n        ]\n    }\n  }\n}\n}\n</script>\n<style>\n\n</style>\n"],"sourceRoot":""}]}