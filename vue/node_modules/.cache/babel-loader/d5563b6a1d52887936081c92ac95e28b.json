{"remainingRequest":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/babel-loader/lib/index.js!/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/liujiaming/Documents/LabPaperShare-main/vue/src/views/Home.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/src/views/Home.vue","mtime":1655285764870},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js","mtime":1651659848347},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/babel-loader/lib/index.js","mtime":1651659848904},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1651659848347},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/vue-loader-v16/dist/index.js","mtime":1651659849069}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/liujiaming/Documents/LabPaperShare-main/vue/src/views/Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\n  <div style=\"padding: 10px\">\n    <div>\n      <el-card shadow=\"hover\">\n        <div id=\"main\" :style=\"{width: '725px', height: '600px'}\"></div>\n      </el-card>\n    </div>\n\n  </div>\n  <div style=\"margin-top: 10px\">\n    <el-card shadow=\"hover\">\n      <div id=\"myChart\" :style=\"{width: '725px', height: '600px'}\"></div>\n    </el-card>\n  </div>\n\n</template>\n\n<script>\nimport request from \"@/utils/request\";\nimport {onMounted, toRaw} from \"vue\";\n\nexport default {\n\n  data() {\n    return {\n      name: \"Home\",\n      param:[{\n        type:0,\n        user_id:0\n      }],\n      param1:[{\n\n      }],\n      id:1,\n      tableData:[{\n        count:1,\n        Date:1\n      }],\n      tableData1:[{\n        count:0,\n        Date:0\n      }],\n      tableData2:[{\n        name:'',\n        value:1\n      }]\n    }\n  },\n  async mounted() {\n    this.user1 = JSON.parse(window.sessionStorage.getItem('user'));\n    let that = this;\n    this.id = parseInt(this.user1.user_id);\n    this.param = {user_id: this.id,type: 0};\n    //console.log(this.param);\n    const result =await request.post(\"/api/Field\",this.param1)\n    this.tableData2 = result\n    console.log(this.tableData2)\n    request.post(\"/api/home\",this.param).then((res) => {\n      this.tableData = res\n      //console.log(this.tableData)\n      this.param={user_id: 0,type: 1};\n      request.post(\"/api/home\",this.param).then((res) => {\n        this.tableData1 = res\n        //console.log(this.tableData1)\n        this.drawLine();\n        this.drawLine1();\n      });\n    });\n\n\n  },\n  // created() {\n  //   let userStr = sessionStorage.getItem(\"user\") || \"{}\"\n  //   this.user = JSON.parse(userStr)\n  //   // 请求服务端，确认当前登录用户的 合法信息\n  //   request.get(\"/user/\" + this.user.id).then(res => {\n  //     if (res.code === 0) {\n  //       this.user = res.data\n  //     }\n  //   })\n  //\n  //   this.load()\n  // },\n  methods: {\n    drawLine1(){\n\n      let myChart = this.$root.echarts.init(document.getElementById('main'))\n      let that = this;\n      let option = {\n        title: {\n          text: '我的上传 vs 全组上传',\n\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: ['我的上传', '全组上传']\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            dataView: { show: true, readOnly: false },\n            magicType: { show: true, type: ['line', 'bar'] },\n            restore: { show: true },\n            saveAsImage: { show: true }\n          }\n        },\n        calculable: true,\n        xAxis: [\n          {\n            type: 'category',\n            // prettier-ignore\n            data: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n          }\n        ],\n        yAxis: [\n          {\n            type: 'value'\n          }\n        ],\n        series: [\n          {\n            name: '我的上传',\n            type: 'bar',\n            data:[],\n            markPoint: {\n              data: [\n                { type: 'max', name: 'Max' },\n                { type: 'min', name: 'Min' }\n              ]\n            },\n            markLine: {\n              data: [{ type: 'average', name: '平均上传数' }]\n            }\n          },\n          {\n            name: '全组上传',\n            type: 'bar',\n            data:[],\n            markPoint: {\n              data: [\n                { type: 'max', name: 'Max' },\n                { type: 'min', name: 'Min' }\n              ]\n            },\n            markLine: {\n              data: [{ type: 'average', name: '平均上传数' }]\n            }\n          }\n        ]\n      }\n      this.tableData.filter(item=>{\n        option.series[0].data.push(item.count)\n      })\n      this.tableData1.filter(item=>{\n        option.series[1].data.push(item.count)\n      })\n      console.log(option.series[0].data)\n      myChart.setOption(option);\n    },\n    drawLine() {\n      // 基于准备好的dom，初始化echarts实例\n      let myChart = this.$root.echarts.init(document.getElementById('myChart'))\n      let option = {\n        title: {\n          text: '上传论文比例统计图',\n          left: 'left',\n          bottom:'bottom'\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          trigger: 'item'\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            mark: {show: true},\n            dataView: {show: true, readOnly: false},\n            restore: {show: true},\n            saveAsImage: {show: true}\n          }\n        },\n        series: [\n          {\n            name: '上传数量',\n            type: 'pie',\n            radius: [50, 250],\n            center: ['50%', '50%'],\n            roseType: 'area',\n            itemStyle: {\n              borderRadius: 8\n            },\n            data: [\n            ]\n          },\n\n        ]\n      }\n\n      this.tableData2.filter(item=>{\n        if (item.name !==\"全部方向\"){\n          \n        }\n      })\n      myChart.setOption(option);\n      // request.get(\"/user/count\").then(res => {\n      //   if (res.code === '0') {\n      //     res.data.forEach(item => {\n      //       option.series[0].data.push({name: item.address, value: item.count})\n      //     })\n      //     // 绘制图表\n      //     myChart.setOption(option);\n      //   }\n      // })\n\n    }\n  }\n}\n</script>\n\n<style scoped>\n.el-carousel__item h3 {\n  color: #475669;\n  font-size: 14px;\n  opacity: 0.75;\n  line-height: 200px;\n  margin: 0;\n}\n\n.el-carousel__item:nth-child(2n) {\n  background-color: #99a9bf;\n}\n\n.el-carousel__item:nth-child(2n+1) {\n  background-color: #d3dce6;\n}\n</style>\n"],"sourceRoot":""}]}