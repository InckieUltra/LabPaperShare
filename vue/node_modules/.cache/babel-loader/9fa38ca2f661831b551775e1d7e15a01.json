{"remainingRequest":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/babel-loader/lib/index.js!/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/liujiaming/Documents/LabPaperShare-main/vue/src/views/Home.vue?vue&type=template&id=fae5bece","dependencies":[{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/src/views/Home.vue","mtime":1653913989918},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js","mtime":1651659848347},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/babel-loader/lib/index.js","mtime":1651659848904},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1651659849417},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1651659848347},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/vue-loader-v16/dist/index.js","mtime":1651659849069}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVuZGVyTGlzdCBhcyBfcmVuZGVyTGlzdCwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2ssIHRvRGlzcGxheVN0cmluZyBhcyBfdG9EaXNwbGF5U3RyaW5nLCBjcmVhdGVFbGVtZW50Vk5vZGUgYXMgX2NyZWF0ZUVsZW1lbnRWTm9kZSwgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgd2l0aEN0eCBhcyBfd2l0aEN0eCwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlIH0gZnJvbSAidnVlIjsKdmFyIF9ob2lzdGVkXzEgPSB7CiAgY2xhc3M6ICJtZWRpdW0iCn07CnZhciBfaG9pc3RlZF8yID0gewogIHN0eWxlOiB7CiAgICAicGFkZGluZyI6ICIxMHB4IgogIH0KfTsKCnZhciBfaG9pc3RlZF8zID0gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIHsKICBpZDogIm1haW4iLAogIHN0eWxlOiB7CiAgICB3aWR0aDogJzc1MHB4JywKICAgIGhlaWdodDogJzYwMHB4JwogIH0KfSwgbnVsbCwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzQgPSB7CiAgc3R5bGU6IHsKICAgICJwYWRkaW5nIjogIjEwcHgiCiAgfQp9OwoKdmFyIF9ob2lzdGVkXzUgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgewogIGlkOiAibXlDaGFydCIsCiAgc3R5bGU6IHsKICAgIHdpZHRoOiAnNzUwcHgnLAogICAgaGVpZ2h0OiAnNjAwcHgnCiAgfQp9LCBudWxsLCAtMQovKiBIT0lTVEVEICovCik7CgpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHZhciBfY29tcG9uZW50X2VsX2Nhcm91c2VsX2l0ZW0gPSBfcmVzb2x2ZUNvbXBvbmVudCgiZWwtY2Fyb3VzZWwtaXRlbSIpOwoKICB2YXIgX2NvbXBvbmVudF9lbF9jYXJvdXNlbCA9IF9yZXNvbHZlQ29tcG9uZW50KCJlbC1jYXJvdXNlbCIpOwoKICB2YXIgX2NvbXBvbmVudF9lbF9jYXJkID0gX3Jlc29sdmVDb21wb25lbnQoImVsLWNhcmQiKTsKCiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jayhfRnJhZ21lbnQsIG51bGwsIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9jYXJvdXNlbCwgewogICAgaW50ZXJ2YWw6IDQwMDAsCiAgICB0eXBlOiAiY2FyZCIsCiAgICBoZWlnaHQ6ICI2MDBweCIKICB9LCB7CiAgICBkZWZhdWx0OiBfd2l0aEN0eChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBbKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KDYsIGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2Nhcm91c2VsX2l0ZW0sIHsKICAgICAgICAgIGtleTogaXRlbQogICAgICAgIH0sIHsKICAgICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgcmV0dXJuIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJoMyIsIF9ob2lzdGVkXzEsIF90b0Rpc3BsYXlTdHJpbmcoaXRlbSksIDEKICAgICAgICAgICAgLyogVEVYVCAqLwogICAgICAgICAgICApXTsKICAgICAgICAgIH0pLAogICAgICAgICAgXzogMgogICAgICAgICAgLyogRFlOQU1JQyAqLwoKICAgICAgICB9LCAxMDI0CiAgICAgICAgLyogRFlOQU1JQ19TTE9UUyAqLwogICAgICAgICk7CiAgICAgIH0pLCA2NAogICAgICAvKiBTVEFCTEVfRlJBR01FTlQgKi8KICAgICAgKSldOwogICAgfSksCiAgICBfOiAxCiAgICAvKiBTVEFCTEUgKi8KCiAgfSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzIsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBudWxsLCBbX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfY2FyZCwgbnVsbCwgewogICAgZGVmYXVsdDogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gW19ob2lzdGVkXzNdOwogICAgfSksCiAgICBfOiAxCiAgICAvKiBTVEFCTEUgKi8KCiAgfSldKV0pLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF80LCBbX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfY2FyZCwgbnVsbCwgewogICAgZGVmYXVsdDogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gW19ob2lzdGVkXzVdOwogICAgfSksCiAgICBfOiAxCiAgICAvKiBTVEFCTEUgKi8KCiAgfSldKV0sIDY0CiAgLyogU1RBQkxFX0ZSQUdNRU5UICovCiAgKTsKfQ=="},{"version":3,"sources":["/Users/liujiaming/Documents/LabPaperShare-main/vue/src/views/Home.vue"],"names":[],"mappings":";;AAGU,EAAA,KAAK,EAAC;;;AAGT,EAAA,KAAqB,EAArB;AAAA,eAAA;AAAA;;;8BAGC,mBAAA,CAAgE,KAAhE,EAAgE;AAA3D,EAAA,EAAE,EAAC,MAAwD;AAAhD,EAAA,KAAK,EAAE;AAAA,IAAA,KAAA,EAAA,OAAA;AAAA,IAAA,MAAA,EAAA;AAAA;AAAyC,CAAhE,E,IAAA,E;;AAAA,C;;;AAKD,EAAA,KAAqB,EAArB;AAAA,eAAA;AAAA;;;8BAEH,mBAAA,CAAmE,KAAnE,EAAmE;AAA9D,EAAA,EAAE,EAAC,SAA2D;AAAhD,EAAA,KAAK,EAAE;AAAA,IAAA,KAAA,EAAA,OAAA;AAAA,IAAA,MAAA,EAAA;AAAA;AAAyC,CAAnE,E,IAAA,E;;AAAA,C;;;;;;;;;6DAfF,YAAA,CAIc,sBAJd,EAIc;AAJA,IAAA,QAAQ,EAAE,IAIV;AAJgB,IAAA,IAAI,EAAC,MAIrB;AAJ4B,IAAA,MAAM,EAAC;AAInC,GAJd,E;sBACoB;AAAA,aAAiB,E,cAAnC,mBAAA,CAEmB,SAFnB,EAEmB,IAFnB,EAEmB,WAAA,CAFc,CAEd,EAFe,UAAT,IAAS,EAAL;eAA7B,YAAA,CAEmB,2BAFnB,EAEmB;AAFkB,UAAA,GAAG,EAAE;AAEvB,SAFnB,EAA8C;4BAC5C;AAAA,mBAAkC,CAAlC,mBAAA,CAAkC,IAAlC,EAAA,UAAA,EAAkC,gBAAA,CAAZ,IAAY,CAAlC,EAA0B;AAAA;AAA1B,aAAkC,CAAlC;AAAA,W,CAD4C;;;;AAAA,SAA9C,E;;AAAA,S;OAEmB,CAFnB,E;;AAAA,OAAmC,EAAjB;AAAA,K;;;;GADpB,C,EAKA,mBAAA,CAOM,KAPN,EAAA,UAAA,EAOM,CANJ,mBAAA,CAIM,KAJN,EAIM,IAJN,EAIM,CAHJ,YAAA,CAEU,kBAFV,EAEU,IAFV,EAEU;sBADR;AAAA,aAAgE,CAAhE,UAAgE,CAAhE;AAAA,K,CACQ;;;;AAAA,GAFV,CAGI,CAJN,CAMI,CAPN,C,EAQA,mBAAA,CAIM,KAJN,EAAA,UAAA,EAIM,CAHN,YAAA,CAEU,kBAFV,EAEU,IAFV,EAEU;sBADR;AAAA,aAAmE,CAAnE,UAAmE,CAAnE;AAAA,K,CACQ;;;;AAAA,GAFV,CAGM,CAJN,C","sourcesContent":["<template>\n  <el-carousel :interval=\"4000\" type=\"card\" height=\"600px\">\n    <el-carousel-item v-for=\"item in 6\" :key=\"item\">\n      <h3 class=\"medium\">{{ item }}</h3>\n    </el-carousel-item>\n  </el-carousel>\n  <div style=\"padding: 10px\">\n    <div>\n      <el-card>\n        <div id=\"main\" :style=\"{width: '750px', height: '600px'}\"></div>\n      </el-card>\n    </div>\n\n  </div>\n  <div style=\"padding: 10px\">\n  <el-card>\n    <div id=\"myChart\" :style=\"{width: '750px', height: '600px'}\"></div>\n  </el-card>\n  </div>\n\n</template>\n\n<script>\nimport request from \"@/utils/request\";\n\nexport default {\n  name: \"Home\",\n  data() {\n    return {}\n  },\n  mounted() {\n    this.drawLine();\n    this.drawLine1();\n  },\n  // created() {\n  //   let userStr = sessionStorage.getItem(\"user\") || \"{}\"\n  //   this.user = JSON.parse(userStr)\n  //   // 请求服务端，确认当前登录用户的 合法信息\n  //   request.get(\"/user/\" + this.user.id).then(res => {\n  //     if (res.code === 0) {\n  //       this.user = res.data\n  //     }\n  //   })\n  //\n  //   this.load()\n  // },\n  methods: {\n    drawLine1(){\n\n      let myChart = this.$root.echarts.init(document.getElementById('main'))\n\n      let option = {\n        title: {\n          text: '我的上传 vs 全组上传',\n          subtext: 'Fake Data'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: ['我的上传', '全组上传']\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            dataView: { show: true, readOnly: false },\n            magicType: { show: true, type: ['line', 'bar'] },\n            restore: { show: true },\n            saveAsImage: { show: true }\n          }\n        },\n        calculable: true,\n        xAxis: [\n          {\n            type: 'category',\n            // prettier-ignore\n            data: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n          }\n        ],\n        yAxis: [\n          {\n            type: 'value'\n          }\n        ],\n        series: [\n          {\n            name: '我的上传',\n            type: 'bar',\n            data: [\n              3, 0, 1, 8, 14, 2, 16, 11, 2, 10, 6, 3\n            ],\n            markPoint: {\n              data: [\n                { type: 'max', name: 'Max' },\n                { type: 'min', name: 'Min' }\n              ]\n            },\n            markLine: {\n              data: [{ type: 'average', name: '平均上传数' }]\n            }\n          },\n          {\n            name: '全组上传',\n            type: 'bar',\n            data: [\n              6, 9, 10, 26, 28, 31, 17, 18, 48, 18, 8, 7\n            ],\n            markPoint: {\n              data: [\n                { type: 'max', name: 'Max' },\n                { type: 'min', name: 'Min' }\n              ]\n            },\n            markLine: {\n              data: [{ type: 'average', name: '平均上传数' }]\n            }\n          }\n        ]\n      }\n      myChart.setOption(option);\n    },\n    drawLine() {\n      // 基于准备好的dom，初始化echarts实例\n      let myChart = this.$root.echarts.init(document.getElementById('myChart'))\n      let option = {\n        title: {\n          text: '我的上传论文比例统计图',\n          subtext: '虚拟数据',\n          left: 'left',\n          bottom:'bottom'\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          trigger: 'item'\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            mark: {show: true},\n            dataView: {show: true, readOnly: false},\n            restore: {show: true},\n            saveAsImage: {show: true}\n          }\n        },\n        series: [\n          {\n            name: '用户比例',\n            type: 'pie',\n            radius: [50, 250],\n            center: ['50%', '50%'],\n            roseType: 'area',\n            itemStyle: {\n              borderRadius: 8\n            },\n            data: [{name :\"哲学\",value : 2},\n              {name :\"语言文学\",value : 1},\n              {name :\"历史学\",value : 4},\n              {name :\"法学\",value : 8},\n              {name :\"管理学\",value : 2},\n              {name :\"教育学\",value : 3},\n              {name :\"医学\",value : 5},\n              {name :\"工程学\",value : 3 },\n            ]\n          },\n\n        ]\n      }\n      myChart.setOption(option);\n      // request.get(\"/user/count\").then(res => {\n      //   if (res.code === '0') {\n      //     res.data.forEach(item => {\n      //       option.series[0].data.push({name: item.address, value: item.count})\n      //     })\n      //     // 绘制图表\n      //     myChart.setOption(option);\n      //   }\n      // })\n\n    }\n  }\n}\n</script>\n\n<style>\n.el-carousel__item h3 {\n  color: #475669;\n  font-size: 14px;\n  opacity: 0.75;\n  line-height: 200px;\n  margin: 0;\n}\n\n.el-carousel__item:nth-child(2n) {\n  background-color: #99a9bf;\n}\n\n.el-carousel__item:nth-child(2n+1) {\n  background-color: #d3dce6;\n}\n</style>\n"],"sourceRoot":""}]}