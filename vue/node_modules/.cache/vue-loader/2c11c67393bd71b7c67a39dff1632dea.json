{"remainingRequest":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/liujiaming/Documents/LabPaperShare-main/vue/src/views/Category.vue?vue&type=style&index=0&id=4d5aa038&lang=css","dependencies":[{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/src/views/Category.vue","mtime":1651980604982},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/css-loader/dist/cjs.js","mtime":1651659848681},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1651659849395},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/postcss-loader/src/index.js","mtime":1651659848884},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1651659848347},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/vue-loader-v16/dist/index.js","mtime":1651659849069}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5tbDMwewogIG1hcmdpbi1sZWZ0OiAzMHB4Owp9Ci5tNTB7CiAgbWFyZ2luOiA1MHB4Cn0K"},{"version":3,"sources":["/Users/liujiaming/Documents/LabPaperShare-main/vue/src/views/Category.vue"],"names":[],"mappings":";AA+MA,CAAC,CAAC,CAAC,CAAC,CAAC;EACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACnB;AACA,CAAC,CAAC,CAAC,CAAC;EACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACb","file":"/Users/liujiaming/Documents/LabPaperShare-main/vue/src/views/Category.vue","sourceRoot":"","sourcesContent":["<template>\n\n\n      <div id=\"treeChart\" :style=\"{width: '750px', height: '800px'}\"></div>\n\n\n</template>\n\n\n<script>\nimport request from \"@/utils/request\";\n\nexport default {\n  // created() {\n  //   let userStr = sessionStorage.getItem(\"user\") || \"{}\"\n  //   this.user = JSON.parse(userStr)\n  //   // 请求服务端，确认当前登录用户的 合法信息\n  //   request.get(\"/user/\" + this.user.id).then(res => {\n  //     if (res.code === 0) {\n  //       this.user = res.data\n  //     }\n  //   })\n  //\n  //   this.load()\n  // },\n  methods: {\n    showChart() {\n      // 基于准备好的dom，初始化echarts实例\n      let myChart = this.$root.echarts.init(document.getElementById('treeChart'))\n\n      // 指定图表的配置项和数据\n      let option = {\n        tooltip: {\n          trigger: 'item',\n          triggerOn: 'mousemove'\n        },\n        series: [\n          {\n            type: 'tree',\n            id: 0,\n            name: 'tree1',\n            data: [this.treedata1],\n            top: '10%',\n            left: '8%',\n            bottom: '22%',\n            right: '20%',\n            symbolSize: 7,\n            edgeShape: 'polyline',\n            edgeForkPosition: '63%',\n            initialTreeDepth: 3,\n            lineStyle: {\n              width: 2\n            },\n            label: {\n              backgroundColor: '#fff',\n              position: 'left',\n              verticalAlign: 'middle',\n              align: 'right'\n            },\n            leaves: {\n              label: {\n                position: 'right',\n                verticalAlign: 'middle',\n                align: 'left'\n              }\n            },\n            emphasis: {\n              focus: 'descendant'\n            },\n            expandAndCollapse: true,\n            animationDuration: 550,\n            animationDurationUpdate: 750\n          }\n        ]\n      };\n      // 使用刚指定的配置项和数据显示图表。\n      myChart.setOption(option);\n    }\n  },\n  mounted() {\n    this.showChart();\n  },\n  data() {\n    return {\n      treedata1: {//一定一定要注意这里有[]\n        name: 'flare',\n        children: [\n          {\n            name: 'data',\n            children: [\n              {\n                name: 'converters',\n                children: [\n                  { name: 'Converters', value: 721 },\n                  { name: 'DelimitedTextConverter', value: 4294 }\n                ]\n              },\n              {\n                name: 'DataUtil',\n                value: 3322\n              }\n            ]\n          },\n          {\n            name: 'display',\n            children: [\n              { name: 'DirtySprite', value: 8833 },\n              { name: 'LineSprite', value: 1732 },\n              { name: 'RectSprite', value: 3623 }\n            ]\n          },\n          {\n            name: 'flex',\n            children: [{ name: 'FlareVis', value: 4116 }]\n          },\n          {\n            name: 'query',\n            children: [\n              { name: 'AggregateExpression', value: 1616 },\n              { name: 'And', value: 1027 },\n              { name: 'Arithmetic', value: 3891 },\n              { name: 'Average', value: 891 },\n              { name: 'BinaryExpression', value: 2893 },\n              { name: 'Comparison', value: 5103 },\n              { name: 'CompositeExpression', value: 3677 },\n              { name: 'Count', value: 781 },\n              { name: 'DateUtil', value: 4141 },\n              { name: 'Distinct', value: 933 },\n              { name: 'Expression', value: 5130 },\n              { name: 'ExpressionIterator', value: 3617 },\n              { name: 'Fn', value: 3240 },\n              { name: 'If', value: 2732 },\n              { name: 'IsA', value: 2039 },\n              { name: 'Literal', value: 1214 },\n              { name: 'Match', value: 3748 },\n              { name: 'Maximum', value: 843 },\n              {\n                name: 'methods',\n                children: [\n                  { name: 'add', value: 593 },\n                  { name: 'and', value: 330 },\n                  { name: 'average', value: 287 },\n                  { name: 'count', value: 277 },\n                  { name: 'distinct', value: 292 },\n                  { name: 'div', value: 595 },\n                  { name: 'eq', value: 594 },\n                  { name: 'fn', value: 460 },\n                  { name: 'gt', value: 603 },\n                  { name: 'gte', value: 625 },\n                  { name: 'iff', value: 748 },\n                  { name: 'isa', value: 461 },\n                  { name: 'lt', value: 597 },\n                  { name: 'lte', value: 619 },\n                  { name: 'max', value: 283 },\n                  { name: 'min', value: 283 },\n                  { name: 'mod', value: 591 },\n                  { name: 'mul', value: 603 },\n                  { name: 'neq', value: 599 },\n                  { name: 'not', value: 386 },\n                  { name: 'or', value: 323 },\n                  { name: 'orderby', value: 307 },\n                  { name: 'range', value: 772 },\n                  { name: 'select', value: 296 },\n                  { name: 'stddev', value: 363 },\n                  { name: 'sub', value: 600 },\n                  { name: 'sum', value: 280 },\n                  { name: 'update', value: 307 },\n                  { name: 'variance', value: 335 },\n                  { name: 'where', value: 299 },\n                  { name: 'xor', value: 354 },\n                  { name: 'x_x', value: 264 }\n                ]\n              },\n              { name: 'Minimum', value: 843 },\n              { name: 'Not', value: 1554 },\n              { name: 'Or', value: 970 },\n              { name: 'Query', value: 13896 },\n              { name: 'Range', value: 1594 },\n              { name: 'StringUtil', value: 4130 },\n              { name: 'Sum', value: 791 },\n              { name: 'Variable', value: 1124 },\n              { name: 'Variance', value: 1876 },\n              { name: 'Xor', value: 1101 }\n            ]\n          },\n          {\n            name: 'scale',\n            children: [\n              { name: 'IScaleMap', value: 2105 },\n              { name: 'LinearScale', value: 1316 },\n              { name: 'LogScale', value: 3151 },\n              { name: 'OrdinalScale', value: 3770 },\n              { name: 'QuantileScale', value: 2435 },\n              { name: 'QuantitativeScale', value: 4839 },\n              { name: 'RootScale', value: 1756 },\n              { name: 'Scale', value: 4268 },\n              { name: 'ScaleType', value: 1821 },\n              { name: 'TimeScale', value: 5833 }\n            ]\n          }\n        ]\n    }\n  }\n}\n}\n</script>\n<style>\n.ml30{\n  margin-left: 30px;\n}\n.m50{\n  margin: 50px\n}\n</style>\n"]}]}