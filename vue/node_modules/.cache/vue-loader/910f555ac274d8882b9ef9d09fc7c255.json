{"remainingRequest":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/liujiaming/Documents/LabPaperShare-main/vue/src/views/Permission.vue?vue&type=style&index=0&id=267d0fee&lang=css","dependencies":[{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/src/views/Permission.vue","mtime":1652777617215},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/css-loader/dist/cjs.js","mtime":1651659848681},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1651659849395},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/postcss-loader/src/index.js","mtime":1651659848884},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1651659848347},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/vue-loader-v16/dist/index.js","mtime":1651659849069}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jdXN0b20tdHJlZS1ub2RlIHsKICBmbGV4OiAxOwogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgZm9udC1zaXplOiAxNHB4OwogIHBhZGRpbmctcmlnaHQ6IDhweDsKfQo="},{"version":3,"sources":["/Users/liujiaming/Documents/LabPaperShare-main/vue/src/views/Permission.vue"],"names":[],"mappings":";AA8HA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EAChB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACpB","file":"/Users/liujiaming/Documents/LabPaperShare-main/vue/src/views/Permission.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"block\">\n    <el-tree\n        :data=\"data\"\n        show-checkbox\n        node-key=\"id\"\n        default-expand-all\n        :expand-on-click-node=\"false\"\n        :render-content=\"renderContent\">\n    </el-tree>\n  </div>\n  <el-dialog title=\"提示\" v-model=\"dialogVisible\" width=\"30%\">\n    <el-form :model=\"form\" label-width=\"120px\">\n      <el-form-item label=\"名称\">\n        <el-input v-model=\"form.name\" style=\"width: 80%\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"价格\">\n        <el-input v-model=\"form.price\" style=\"width: 80%\"></el-input>\n      </el-form-item>\n    </el-form>\n    <template #footer>\n          <span class=\"dialog-footer\">\n            <el-button @click=\"dialogVisible = false\">取 消</el-button>\n            <el-button type=\"primary\" @click=\"append(data)\">确 定</el-button>\n          </span>\n    </template>\n  </el-dialog>\n</template>\n\n\n\n<script>\nlet id = 1000;\nimport request from \"@/utils/request\";\n\nexport default {\n  name: 'Permission',\n  components: {},\n  data() {\n    return {\n      form: {},\n      dialogVisible: false,\n       data : [{\n        id: 1,\n        label: '一级 1',\n        children: [{\n          id: 4,\n          label: '二级 1-1',\n          children: [{\n            id: 9,\n            label: '三级 1-1-1'\n          }, {\n            id: 10,\n            label: '三级 1-1-2'\n          }]\n        }]\n      }, {\n        id: 2,\n        label: '一级 2',\n        children: [{\n          id: 5,\n          label: '二级 2-1'\n        }, {\n          id: 6,\n          label: '二级 2-2'\n        }]\n      }, {\n        id: 3,\n        label: '一级 3',\n        children: [{\n          id: 7,\n          label: '二级 3-1'\n        }, {\n          id: 8,\n          label: '二级 3-2'\n        }]\n      }]\n    }\n  },\n  methods: {\n    add() {\n      console.log(\"zengjia\")\n      this.dialogVisible = true\n      this.form = {}\n      if (this.$refs['upload']) {\n        this.$refs['upload'].clearFiles()  // 清除历史文件列表\n      }\n    },\n    append(data) {\n\n      const newChild = { id: id++, label: 'testtest', children: [] };\n      if (!data.children) {\n        this.$set(data, 'children', []);\n      }\n      data.children.push(newChild);\n    },\n    change(data) {\n      const newChild = { id: id++, label: 'testtest', children: [] };\n      if (!data.children) {\n        this.$set(data, 'children', []);\n      }\n      data.children.push(newChild);\n    },\n    remove(node, data) {\n      const parent = node.parent;\n      const children = parent.data.children || parent.data;\n      const index = children.findIndex(d => d.id === data.id);\n      children.splice(index, 1);\n    },\n\n    renderContent(h, { node, data, store }) {\n      return (\n          <span class=\"custom-tree-node\">\n            <span>{node.label}</span>\n            <span>\n              <el-button size=\"mini\" type=\"text\" on-click={ () => this.change(data) }>修改</el-button>\n              <el-button size=\"mini\" type=\"text\" on-click={ () => this.add() }>增加</el-button>\n              <el-button size=\"mini\" type=\"text\" on-click={ () => this.remove(node, data) }>删除</el-button>\n            </span>\n          </span>);\n    }\n  }\n}\n</script>\n\n<style>\n.custom-tree-node {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 14px;\n  padding-right: 8px;\n}\n</style>\n"]}]}