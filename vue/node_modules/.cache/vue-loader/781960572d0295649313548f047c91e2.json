{"remainingRequest":"D:\\LabPaperShare\\vue\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\LabPaperShare\\vue\\src\\components\\ValidCode.vue?vue&type=style&index=0&id=6c641f89&scoped=true&lang=css","dependencies":[{"path":"D:\\LabPaperShare\\vue\\src\\components\\ValidCode.vue","mtime":1651064785033},{"path":"D:\\LabPaperShare\\vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1654419529313},{"path":"D:\\LabPaperShare\\vue\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1654419543183},{"path":"D:\\LabPaperShare\\vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1654680823917},{"path":"D:\\LabPaperShare\\vue\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1654680823510},{"path":"D:\\LabPaperShare\\vue\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1654419543172}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouVmFsaWRDb2Rlew0KICBkaXNwbGF5OiBmbGV4Ow0KICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KLlZhbGlkQ29kZSBzcGFuew0KICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQp9DQo="},{"version":3,"sources":["D:\\LabPaperShare\\vue\\src\\components\\ValidCode.vue"],"names":[],"mappings":";AAqFA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB","file":"D:/LabPaperShare/vue/src/components/ValidCode.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div\r\n      class=\"ValidCode disabled-select\"\r\n      :style=\"`width:${width}; height:${height}`\"\r\n      @click=\"refreshCode\"\r\n  >\r\n    <span\r\n        v-for=\"(item, index) in codeList\"\r\n        :key=\"index\"\r\n        :style=\"getStyle(item)\"\r\n    >{{ item.code }}</span>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ValidCode',\r\n  model: {\r\n    prop: 'value',\r\n    event: 'input'\r\n  },\r\n  props: {\r\n    width: {\r\n      type: String,\r\n      default: '100px'\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: '40px'\r\n    },\r\n    length: {\r\n      type: Number,\r\n      default: 4\r\n    },\r\n    refresh: {\r\n      type: Number\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      codeList: []\r\n    }\r\n  },\r\n  watch: {\r\n    refresh () {\r\n      this.createdCode()\r\n    }\r\n  },\r\n  mounted () {\r\n    this.createdCode()\r\n  },\r\n  methods: {\r\n    refreshCode () {\r\n      this.createdCode()\r\n    },\r\n    createdCode () {\r\n      const len = this.length\r\n      const codeList = []\r\n      const chars = 'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz0123456789'\r\n      const charsLen = chars.length\r\n      // 生成\r\n      for (let i = 0; i < len; i++) {\r\n        const rgb = [Math.round(Math.random() * 220), Math.round(Math.random() * 240), Math.round(Math.random() * 200)]\r\n        codeList.push({\r\n          code: chars.charAt(Math.floor(Math.random() * charsLen)),\r\n          color: `rgb(${rgb})`,\r\n          fontSize: `${10 + (+[Math.floor(Math.random() * 10)] + 6)}px`,\r\n          padding: `${[Math.floor(Math.random() * 10)]}px`,\r\n          transform: `rotate(${Math.floor(Math.random() * 90) - Math.floor(Math.random() * 90)}deg)`\r\n        })\r\n      }\r\n      // 指向\r\n      this.codeList = codeList\r\n      // 将当前数据派发出去\r\n      // console.log(codeList.map(item => item.code).join(''))\r\n      this.$emit('input', codeList.map(item => item.code).join(''))\r\n    },\r\n    getStyle (data) {\r\n      return `color: ${data.color}; font-size: ${data.fontSize}; padding: ${data.padding}; transform: ${data.transform}`\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.ValidCode{\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n}\r\n.ValidCode span{\r\n  display: inline-block;\r\n}\r\n</style>\r\n"]}]}