{"remainingRequest":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/liujiaming/Documents/LabPaperShare-main/vue/src/views/Home.vue?vue&type=template&id=fae5bece","dependencies":[{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/src/views/Home.vue","mtime":1651483545913},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js","mtime":1651659848347},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/babel-loader/lib/index.js","mtime":1651659848904},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1651659849417},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1651659848347},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/vue-loader-v16/dist/index.js","mtime":1651659849069}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBzdHlsZT0icGFkZGluZzogMTBweCI+CgoKICAgIDxkaXY+CiAgICAgIDxlbC1jYXJkPgogICAgICAgIDxkaXYgaWQ9Im1haW4iIDpzdHlsZT0ie3dpZHRoOiAnNzUwcHgnLCBoZWlnaHQ6ICc2MDBweCd9Ij48L2Rpdj4KICAgICAgPC9lbC1jYXJkPgogICAgPC9kaXY+CgogIDwvZGl2PgoKICA8ZGl2IHN0eWxlPSJwYWRkaW5nOiAxMHB4Ij4KICA8ZWwtY2FyZD4KICAgIDxkaXYgaWQ9Im15Q2hhcnQiIDpzdHlsZT0ie3dpZHRoOiAnNzUwcHgnLCBoZWlnaHQ6ICc2MDBweCd9Ij48L2Rpdj4KICA8L2VsLWNhcmQ+CiAgPC9kaXY+Cgo="},{"version":3,"sources":["/Users/liujiaming/Documents/LabPaperShare-main/vue/src/views/Home.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;;;IAGxB,CAAC,CAAC,CAAC,CAAC;MACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACN,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEP,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACN,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACT,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/liujiaming/Documents/LabPaperShare-main/vue/src/views/Home.vue","sourceRoot":"","sourcesContent":["<template>\n  <div style=\"padding: 10px\">\n\n\n    <div>\n      <el-card>\n        <div id=\"main\" :style=\"{width: '750px', height: '600px'}\"></div>\n      </el-card>\n    </div>\n\n  </div>\n\n  <div style=\"padding: 10px\">\n  <el-card>\n    <div id=\"myChart\" :style=\"{width: '750px', height: '600px'}\"></div>\n  </el-card>\n  </div>\n\n</template>\n\n<script>\nimport request from \"@/utils/request\";\n\nexport default {\n  name: \"Home\",\n  data() {\n    return {}\n  },\n  mounted() {\n    this.drawLine();\n    this.drawLine1();\n  },\n  // created() {\n  //   let userStr = sessionStorage.getItem(\"user\") || \"{}\"\n  //   this.user = JSON.parse(userStr)\n  //   // 请求服务端，确认当前登录用户的 合法信息\n  //   request.get(\"/user/\" + this.user.id).then(res => {\n  //     if (res.code === 0) {\n  //       this.user = res.data\n  //     }\n  //   })\n  //\n  //   this.load()\n  // },\n  methods: {\n    drawLine1(){\n\n      let myChart = this.$root.echarts.init(document.getElementById('main'))\n\n      let option = {\n        title: {\n          text: '我的上传 vs 全组上传',\n          subtext: 'Fake Data'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: ['我的上传', '全组上传']\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            dataView: { show: true, readOnly: false },\n            magicType: { show: true, type: ['line', 'bar'] },\n            restore: { show: true },\n            saveAsImage: { show: true }\n          }\n        },\n        calculable: true,\n        xAxis: [\n          {\n            type: 'category',\n            // prettier-ignore\n            data: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n          }\n        ],\n        yAxis: [\n          {\n            type: 'value'\n          }\n        ],\n        series: [\n          {\n            name: '我的上传',\n            type: 'bar',\n            data: [\n              3, 0, 1, 8, 14, 2, 16, 11, 2, 10, 6, 3\n            ],\n            markPoint: {\n              data: [\n                { type: 'max', name: 'Max' },\n                { type: 'min', name: 'Min' }\n              ]\n            },\n            markLine: {\n              data: [{ type: 'average', name: '平均上传数' }]\n            }\n          },\n          {\n            name: '全组上传',\n            type: 'bar',\n            data: [\n              6, 9, 10, 26, 28, 31, 17, 18, 48, 18, 8, 7\n            ],\n            markPoint: {\n              data: [\n                { type: 'max', name: 'Max' },\n                { type: 'min', name: 'Min' }\n              ]\n            },\n            markLine: {\n              data: [{ type: 'average', name: '平均上传数' }]\n            }\n          }\n        ]\n      }\n      myChart.setOption(option);\n    },\n    drawLine() {\n      // 基于准备好的dom，初始化echarts实例\n      let myChart = this.$root.echarts.init(document.getElementById('myChart'))\n      let option = {\n        title: {\n          text: '我的上传论文比例统计图',\n          subtext: '虚拟数据',\n          left: 'left',\n          bottom:'bottom'\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          trigger: 'item'\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            mark: {show: true},\n            dataView: {show: true, readOnly: false},\n            restore: {show: true},\n            saveAsImage: {show: true}\n          }\n        },\n        series: [\n          {\n            name: '用户比例',\n            type: 'pie',\n            radius: [50, 250],\n            center: ['50%', '50%'],\n            roseType: 'area',\n            itemStyle: {\n              borderRadius: 8\n            },\n            data: [{name :\"哲学\",value : 2},\n              {name :\"语言文学\",value : 1},\n              {name :\"历史学\",value : 4},\n              {name :\"法学\",value : 8},\n              {name :\"管理学\",value : 2},\n              {name :\"教育学\",value : 3},\n              {name :\"医学\",value : 5},\n              {name :\"工程学\",value : 3 },\n            ]\n          }\n        ]\n      }\n      myChart.setOption(option);\n      // request.get(\"/user/count\").then(res => {\n      //   if (res.code === '0') {\n      //     res.data.forEach(item => {\n      //       option.series[0].data.push({name: item.address, value: item.count})\n      //     })\n      //     // 绘制图表\n      //     myChart.setOption(option);\n      //   }\n      // })\n\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}