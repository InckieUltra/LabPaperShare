{"remainingRequest":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/liujiaming/Documents/LabPaperShare-main/vue/src/views/Register.vue?vue&type=style&index=0&id=63ae9146&scoped=true&lang=css","dependencies":[{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/src/views/Register.vue","mtime":1651491839281},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/css-loader/dist/cjs.js","mtime":1651659848681},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1651659849395},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/postcss-loader/src/index.js","mtime":1651659848884},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1651659848347},{"path":"/Users/liujiaming/Documents/LabPaperShare-main/vue/node_modules/vue-loader-v16/dist/index.js","mtime":1651659849069}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci52aWRlby1jb250YWluZXIgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBoZWlnaHQ6IDEwMHZoOwogIG92ZXJmbG93OiBoaWRkZW47CiAgYmFja2dyb3VuZDogdXJsKCIuLi9hc3NldHMvYmFja2dyb3VuZDIuc3ZnIik7Cn0KCg=="},{"version":3,"sources":["/Users/liujiaming/Documents/LabPaperShare-main/vue/src/views/Register.vue"],"names":[],"mappings":";AAuJA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C","file":"/Users/liujiaming/Documents/LabPaperShare-main/vue/src/views/Register.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class = \"video-container\">\n    <div style=\"width: 100%; height: 100vh; overflow: hidden\">\n      <div style=\"width: 600px; margin: 100px auto;background-color: white;border-radius: 20px;box-shadow: 0 10px 20px  rgba(0, 0, 0, .05);\">\n        <div style=\"width: 400px; margin: 100px auto\">\n          <div style=\"font-size: 30px; text-align: center; padding: 30px 0\">欢迎注册</div>\n          <el-form ref=\"form\" :model=\"form\" size=\"normal\" :rules=\"rules\">\n            <el-form-item  prop=\"username\" >\n              <el-input prefix-icon=\"el-icon-user-solid\" v-model=\"form.username\" placeholder=\"请输入用户名\"></el-input>\n            </el-form-item>\n            <el-form-item prop=\"email\">\n              <el-input prefix-icon=\"el-icon-message\" v-model=\"form.email\" placeholder=\"请输入邮箱\"></el-input>\n            </el-form-item>\n            <el-form-item prop=\"password\">\n              <el-input prefix-icon=\"el-icon-lock\" v-model=\"form.password\" show-password placeholder=\"请输入密码\"></el-input>\n            </el-form-item>\n            <el-form-item prop=\"confirm\">\n              <el-input prefix-icon=\"el-icon-lock\" v-model=\"form.confirm\" show-password placeholder=\"请确认密码\"></el-input>\n            </el-form-item>\n            <div style=\"display: flex\">\n              <el-form-item prop=\"identify\" style=\"width: 50%\">\n                <el-input prefix-icon=\"el-icon-caret-right\" v-model=\"form.identify\" placeholder=\"请输入验证码\" ></el-input>\n              </el-form-item>\n              <el-form-item>\n                <el-button v-if=\"disabled\" type=\"primary\" size=\"mini\" style=\"width: 200px; height: 40px;margin-left: 12px\" @click=\"verification\" plain>\n                  发送邮箱验证码\n                </el-button>\n                <el-button v-if=\"!disabled\" type=\"info\" disabled size=\"mini\" style=\"width: 200px;height: 40px;margin-left: 12px\">\n                 <div>\n                   {{ timer }}秒后重试\n                 </div>\n                </el-button>\n              </el-form-item>\n            </div>\n\n            <el-form-item>\n              <el-button  style=\"width: 100%\" type=\"primary\" @click=\"register\" >注册</el-button>\n            </el-form-item>\n            <el-form-item><el-button type=\"text\" @click=\"$router.push('/login')\">&lt;&lt;返回登录 </el-button></el-form-item>\n          </el-form>\n        </div>\n      </div>\n    </div>\n\n  </div>\n\n</template>\n\n<script>\nimport request from \"@/utils/request\";\n\nexport default {\n  name: \"Register\",\n\n  data() {\n    return {\n      disabled: true,\n      timer: 11,\n      form: {},\n      rules: {\n        username: [\n          {required: true, message: '请输入用户名', trigger: 'blur'}\n          ,{\n            min: 3,\n            max: 20,\n            message: '长度在 3 到 20 个字符',\n            trigger: 'blur'\n          }\n        ],\n        email: [\n          {required: true, message: '请输入邮箱', trigger: 'blur'},\n          {\n            pattern: /^([a-zA-Z0-9]+[-_\\.]?)+@[a-zA-Z0-9]+\\.[a-z]+$/,\n            message: \"请输入正确的邮箱格式\",\n            trigger: \"blur\"\n          }\n        ],\n        password: [\n          {required: true, message: '请输入密码', trigger: 'blur'},\n          {\n            min: 6,\n            message: '请大于6个字符',\n            trigger: 'blur'\n          }\n        ],\n        confirm: [\n          {required: true, message: '请确认密码', trigger: 'blur'},\n        ],\n        identify: [\n          {required: true, message: '请输入邮箱验证码', trigger: 'blur'},\n        ],\n      }\n    }\n  },\n  methods: {\n    send() {\n      request.post(\"/api/register/sendemail\", this.form).then(res => {\n        console.log(\"发送验证码\")\n      })\n\n    },\n    verification() {\n\n      this.disabled = false\n      this.send()// 调获取验证码接口\n      const authTimer = setInterval(() => {\n        this.timer--\n        if (this.timer <= 0) {\n          this.disabled = true\n          this.timer = 11\n          clearInterval(authTimer)\n        }\n      }, 1000)\n    },\n\n    register() {\n\n      if (this.form.password !== this.form.confirm) {\n        this.$message({\n          type: \"error\",\n          message: '2次密码输入不一致！'\n        })\n        return\n      }\n\n      this.$refs['form'].validate((valid) => {\n        if (valid) {\n          request.post(\"/api/register\", this.form).then(res => {\n            if (res.code === 0) {\n              this.$message({\n                type: \"success\",\n                message: \"注册成功\"\n              })\n              this.$router.push(\"/login\")  //zhuce成功之后进行页面的跳转，跳转到主页\n            } else {\n              this.$message({\n                type: \"error\",\n                message: res.msg\n              })\n            }\n          })\n\n\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.video-container {\n  position: relative;\n  height: 100vh;\n  overflow: hidden;\n  background: url(\"../assets/background2.svg\");\n}\n\n</style>\n"]}]}